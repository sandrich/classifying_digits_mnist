====================
Algorithm Parameters
====================

Common parameters
=================
All algorithms share a few settings.

.. NOTE::
these parameters should be placed **before** the selected algorithm

Save model
^^^^^^^^^^

``--save | -s``

Enter a filename for the model to save its trained state once it has finished training. It can be used for future use.
Defaults to None
::
    mnist-predict --save rf.model rf


Load model
^^^^^^^^^^
``--load | -l``

Enter a filename of an **existing** model which you have previously saved. Defaults to None
::
    mnist-predict --load rf.model rf


.. NOTE::
    If you specified settings for your training and load a model, the loaded model's settings will override your specified settings.

Random Seed
^^^^^^^^^^^
``--random_seed | -rs``

If you want to make reproducible work, a random seed is vital. You can specify here a random seed as an integer.
Defaults to None
::
    mnist-predict -rs 12345 rf

Report Directory
^^^^^^^^^^^^^^^^
``--report_directory | -rd``

Indicate the name of a folder to group all of your results. If this flag is included, the images generated by the script
will be saved to disk in this folder, along with a CSV file of the accuracy results. If this flag is not set, the
results are displayed on screen and not persisted. Defaults to None
::
    mnist-predict -rd my_report rf

Test Suite
^^^^^^^^^^
``--test_suite | -ts``

Defines a test_suite configuration file to run multiple algorithms agains each other and compare results. Defaults to
None. More info on test suites can be found :doc:`here <./test_suite>`
::
    mnist-predict -ts test_suite_example.json

.. NOTE::
    Since the test suite contains all the settings for configuring and running algorithms, if this flag is present,
    any algorithm and/or configuration provided by the command-line will be ignored.

-----------

Random Forest Parameters
========================

Number of trees / estimators
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
``--trees | -t``

Defines the number of trees the algorithm generates. Defaults to 20
::
    mnist-predict rf --trees 10

Tree depth
^^^^^^^^^^
``--depth | -d``

Defines how deep we allow the trees to grow. Defaults to 9
::
    mnist-predict rf --depth 50

Impurity method
^^^^^^^^^^^^^^^
``--impurity_method | -i``

Defines which impurity method to use when deciding which parameter to select for a split.
Can either be ``gini`` or ``entropy``, Defaults to ``entropy``
::
    python mnist_classifier rf -i gini

-------------

MLP Parameters
==============

Hidden layers
^^^^^^^^^^^^^
``--hidden_layers | -hl``

Defines how many hidden layers, and how many neurons per hidden layer to construct.
Defaults to one hidden layer of 100 neurons
For example, to build a model with three layers : 100 in the first, 25 in the second, and 15 in the third, you would use:
::
    mnist-predict mlp -hl 100 25 15

Alpha bias
^^^^^^^^^^
``--alpha | -a``

Defines the alpha bias of the MLP. Defaults to 0.0001
::
    mnist-predict mlp -a 0.01

Batch Size
^^^^^^^^^^
``--batch_size | -b``

Defines the size of the training batches. Defaults to 200
::
    mnist-predict mlp -b 50

Maximum iterations
^^^^^^^^^^^^^^^^^^
``--max_iter | -i``

Defines how many training iterations the algorithm should run before stopping training.
Note that the algorithm might not do exactly this many iterations if no improvement is seen after several iterations.
Defaults to 200.
::
    mnist-predict mlp -i 10

Verbose mode
^^^^^^^^^^^^
``--verbose | -v``

Makes the algorithm print out each iteration step.
::
    mnist-predict mlp -v
